From: Simon McVittie <simon.mcvittie@collabora.co.uk>
Date: Mon, 8 Feb 2016 20:09:58 +0000
Subject: Replace $DBUS_USE_TEST_BINARY with $DBUS_TEST_DBUS_LAUNCH

Instead of using $DBUS_USE_TEST_BINARY to control whether to use the
hard-coded test binary TEST_BUS_LAUNCH_BINARY, we can just use
$DBUS_TEST_DBUS_LAUNCH to control what we launch directly, as we
were already doing for $DBUS_TEST_DAEMON.

[smcv: In addition to being a simplification, not hard-coding a path in
the ${builddir} makes the dbus-1-dbg Debian package reproducible across
varying build paths.]

Signed-off-by: Simon McVittie <simon.mcvittie@collabora.co.uk>
Bug: https://bugs.freedesktop.org/show_bug.cgi?id=92899
Reviewed-by: Ralf Habacker <ralf.habacker@freenet.de>
Origin: backport, 1.11.2, commit:c7f3df027179f191a409f90582743ff3041f0bd2
---
 cmake/CMakeLists.txt              | 1 -
 cmake/config.h.cmake              | 1 -
 cmake/modules/Macros.cmake        | 1 +
 configure.ac                      | 3 ---
 dbus/dbus-sysdeps-unix.c          | 8 ++++----
 test/name-test/Makefile.am        | 1 +
 tools/dbus-launch.c               | 6 +++---
 tools/run-with-tmp-session-bus.sh | 5 -----
 8 files changed, 9 insertions(+), 17 deletions(-)

diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index 4db9c67..1333250 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -506,7 +506,6 @@ if (DBUS_BUILD_TESTS)
     set(DBUS_TEST_DATA ${CMAKE_BINARY_DIR}/test/data)
     set(TEST_SOCKET_DIR ${DBUS_SESSION_SOCKET_DIR} )
     set(TEST_LAUNCH_HELPER_BINARY ${EXECUTABLE_OUTPUT_PATH}/dbus-daemon-launch-helper-test)
-    set(TEST_BUS_LAUNCH_BINARY ${EXECUTABLE_OUTPUT_PATH}/dbus-launch${EXEEXT})
     if (UNIX)
         set (TEST_LISTEN "unix:tmpdir=${TEST_SOCKET_DIR}")
     endif (UNIX)
diff --git a/cmake/config.h.cmake b/cmake/config.h.cmake
index d2af3c9..c498362 100644
--- a/cmake/config.h.cmake
+++ b/cmake/config.h.cmake
@@ -33,7 +33,6 @@
 // test binaries
 #define DBUS_TEST_EXEC "@DBUS_TEST_EXEC@"
 #define DBUS_EXEEXT "@EXEEXT@"
-#cmakedefine TEST_BUS_LAUNCH_BINARY "@TEST_BUS_LAUNCH_BINARY@"
 
 /* Some dbus features */
 #cmakedefine DBUS_ENABLE_ANSI 1
diff --git a/cmake/modules/Macros.cmake b/cmake/modules/Macros.cmake
index 8d6cf11..d6b64e4 100644
--- a/cmake/modules/Macros.cmake
+++ b/cmake/modules/Macros.cmake
@@ -52,6 +52,7 @@ macro(add_test_executable _target _source)
     list(APPEND _env "DBUS_SESSION_BUS_ADDRESS=")
     list(APPEND _env "DBUS_FATAL_WARNINGS=1")
     list(APPEND _env "DBUS_TEST_DATA=${PREFIX}${CMAKE_BINARY_DIR}/test/data")
+    list(APPEND _env "DBUS_TEST_DBUS_LAUNCH=${PREFIX}${CMAKE_BINARY_DIR}/bin/dbus-launch${EXEEXT}")
     list(APPEND _env "DBUS_TEST_HOMEDIR=${PREFIX}${CMAKE_BINARY_DIR}/dbus")
     set_tests_properties(${_target} PROPERTIES ENVIRONMENT "${_env}")
 endmacro(add_test_executable)
diff --git a/configure.ac b/configure.ac
index 1fabddd..0184159 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1739,9 +1739,6 @@ AC_DEFINE_UNQUOTED([DBUS_TEST_EXEC], ["$DBUS_TEST_EXEC"],
 AC_DEFINE_UNQUOTED([DBUS_EXEEXT], ["$EXEEXT"],
                    [Extension for executables, typically empty or .exe])
 
-AC_DEFINE_UNQUOTED(TEST_BUS_LAUNCH_BINARY, ["$DBUS_PWD/tools/dbus-launch$EXEEXT"],
-                   [Full path to the dbus-launch in the builddir])
-
 ## Export the non-setuid external helper
 TEST_LAUNCH_HELPER_BINARY="$DBUS_PWD/bus/dbus-daemon-launch-helper-test$EXEEXT"
 AC_SUBST(TEST_LAUNCH_HELPER_BINARY)
diff --git a/dbus/dbus-sysdeps-unix.c b/dbus/dbus-sysdeps-unix.c
index 9d914f8..a267ef5 100644
--- a/dbus/dbus-sysdeps-unix.c
+++ b/dbus/dbus-sysdeps-unix.c
@@ -3775,7 +3775,7 @@ _dbus_get_autolaunch_address (const char *scope,
    * but that's done elsewhere, and if it worked, this function wouldn't
    * be called.) */
   const char *display;
-  char *progpath;
+  const char *progpath;
   char *argv[6];
   int i;
   DBusString uuid;
@@ -3820,9 +3820,9 @@ _dbus_get_autolaunch_address (const char *scope,
     }
 
 #ifdef DBUS_ENABLE_EMBEDDED_TESTS
-  if (_dbus_getenv ("DBUS_USE_TEST_BINARY") != NULL)
-    progpath = TEST_BUS_LAUNCH_BINARY;
-  else
+  progpath = _dbus_getenv ("DBUS_TEST_DBUS_LAUNCH");
+
+  if (progpath == NULL)
 #endif
     progpath = DBUS_BINDIR "/dbus-launch";
   /*
diff --git a/test/name-test/Makefile.am b/test/name-test/Makefile.am
index 92227ed..42e1adc 100644
--- a/test/name-test/Makefile.am
+++ b/test/name-test/Makefile.am
@@ -35,6 +35,7 @@ AM_TESTS_ENVIRONMENT = \
         export PYTHON=@PYTHON@; \
         export DBUS_TEST_DATA=@abs_top_builddir@/test/data; \
         export DBUS_TEST_DAEMON=@abs_top_builddir@/bus/dbus-daemon$(EXEEXT); \
+        export DBUS_TEST_DBUS_LAUNCH=@abs_top_builddir@/tools/dbus-launch$(EXEEXT); \
         export XDG_RUNTIME_DIR=@abs_top_builddir@/test/XDG_RUNTIME_DIR; \
         unset DBUS_SESSION_BUS_PID; \
         $(NULL)
diff --git a/tools/dbus-launch.c b/tools/dbus-launch.c
index 80e4a24..205a994 100644
--- a/tools/dbus-launch.c
+++ b/tools/dbus-launch.c
@@ -1184,10 +1184,10 @@ main (int argc, char **argv)
  
 #ifdef DBUS_ENABLE_EMBEDDED_TESTS
       {
-        const char *test_daemon;
         /* exec from testdir */
-        if (getenv ("DBUS_USE_TEST_BINARY") != NULL &&
-            (test_daemon = getenv ("DBUS_TEST_DAEMON")) != NULL)
+        const char *test_daemon = getenv ("DBUS_TEST_DAEMON");
+
+        if (test_daemon != NULL)
           {
             if (config_file == NULL && getenv ("DBUS_TEST_DATA") != NULL)
               {
diff --git a/tools/run-with-tmp-session-bus.sh b/tools/run-with-tmp-session-bus.sh
index 94ae8fc..688f9e4 100755
--- a/tools/run-with-tmp-session-bus.sh
+++ b/tools/run-with-tmp-session-bus.sh
@@ -45,11 +45,6 @@ export LD_LIBRARY_PATH
 unset DBUS_SESSION_BUS_ADDRESS
 unset DBUS_SESSION_BUS_PID
 
-# this does not actually affect dbus-run-session any more, but could be
-# significant for dbus-launch as used by the autolaunch test
-DBUS_USE_TEST_BINARY=1
-export DBUS_USE_TEST_BINARY
-
 $DBUS_TOP_BUILDDIR/tools/dbus-run-session \
     --config-file="$CONFIG_FILE" \
     --dbus-daemon="$DBUS_TOP_BUILDDIR/bus/dbus-daemon" \
