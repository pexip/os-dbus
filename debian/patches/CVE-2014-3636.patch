Description: fix denial of service via large number of fds
Origin: backport, http://cgit.freedesktop.org/dbus/dbus/commit/?h=dbus-1.6&id=346da99f7620e6901e7c7babd4590fcc5aac32bf
Bug: https://bugs.freedesktop.org/show_bug.cgi?id=82820

Index: dbus-1.4.18/bus/config-parser.c
===================================================================
--- dbus-1.4.18.orig/bus/config-parser.c	2014-09-17 11:12:08.538219559 -0400
+++ dbus-1.4.18/bus/config-parser.c	2014-09-17 11:12:08.530219559 -0400
@@ -413,9 +413,9 @@
       maximum number of file descriptors we can receive. Picking a
       high value here thus translates directly to more memory
       allocation. */
-      parser->limits.max_incoming_unix_fds = 1024*4;
-      parser->limits.max_outgoing_unix_fds = 1024*4;
-      parser->limits.max_message_unix_fds = 1024;
+      parser->limits.max_incoming_unix_fds = DBUS_DEFAULT_MESSAGE_UNIX_FDS*4;
+      parser->limits.max_outgoing_unix_fds = DBUS_DEFAULT_MESSAGE_UNIX_FDS*4;
+      parser->limits.max_message_unix_fds = DBUS_DEFAULT_MESSAGE_UNIX_FDS;
       
       /* Making this long means the user has to wait longer for an error
        * message if something screws up, but making it too short means
Index: dbus-1.4.18/bus/session.conf.in
===================================================================
--- dbus-1.4.18.orig/bus/session.conf.in	2014-09-17 11:12:08.538219559 -0400
+++ dbus-1.4.18/bus/session.conf.in	2014-09-17 11:12:08.530219559 -0400
@@ -53,7 +53,8 @@
   <limit name="max_outgoing_bytes">1000000000</limit>
   <limit name="max_outgoing_unix_fds">250000000</limit>
   <limit name="max_message_size">1000000000</limit>
-  <limit name="max_message_unix_fds">4096</limit>
+  <!-- We do not override max_message_unix_fds here since the in-kernel
+       limit is also relatively low -->
   <limit name="service_start_timeout">120000</limit>  
   <limit name="auth_timeout">240000</limit>
   <limit name="max_completed_connections">100000</limit>  
Index: dbus-1.4.18/dbus/dbus-message.c
===================================================================
--- dbus-1.4.18.orig/dbus/dbus-message.c	2014-09-17 11:12:08.538219559 -0400
+++ dbus-1.4.18/dbus/dbus-message.c	2014-09-17 11:12:08.530219559 -0400
@@ -35,6 +35,7 @@
 #include "dbus-list.h"
 #include "dbus-threads-internal.h"
 #ifdef HAVE_UNIX_FD_PASSING
+#include "dbus-sysdeps.h"
 #include "dbus-sysdeps-unix.h"
 #endif
 
@@ -3736,7 +3737,7 @@
   SCM_RIGHTS works we need to preallocate an fd array of the maximum
   number of unix fds we want to receive in advance. A
   try-and-reallocate loop is not possible. */
-  loader->max_message_unix_fds = 1024;
+  loader->max_message_unix_fds = DBUS_DEFAULT_MESSAGE_UNIX_FDS;
 
   if (!_dbus_string_init (&loader->data))
     {
Index: dbus-1.4.18/dbus/dbus-sysdeps.h
===================================================================
--- dbus-1.4.18.orig/dbus/dbus-sysdeps.h	2014-09-17 11:12:08.538219559 -0400
+++ dbus-1.4.18/dbus/dbus-sysdeps.h	2014-09-17 11:12:08.534219559 -0400
@@ -536,6 +536,14 @@
 const char *
 _dbus_replace_install_prefix (const char *configure_time_path);
 
+/* Do not set this too high: it is a denial-of-service risk.
+ * See <https://bugs.freedesktop.org/show_bug.cgi?id=82820>
+ *
+ * (This needs to be in the non-Unix-specific header so that
+ * the config-parser can use it.)
+ */
+#define DBUS_DEFAULT_MESSAGE_UNIX_FDS 16
+
 /** @} */
 
 DBUS_END_DECLS
